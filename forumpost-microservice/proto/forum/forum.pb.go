// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/forum.proto

package forumpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Forum struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId             string   `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Forum) Reset()         { *m = Forum{} }
func (m *Forum) String() string { return proto.CompactTextString(m) }
func (*Forum) ProtoMessage()    {}
func (*Forum) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{0}
}

func (m *Forum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Forum.Unmarshal(m, b)
}
func (m *Forum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Forum.Marshal(b, m, deterministic)
}
func (m *Forum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Forum.Merge(m, src)
}
func (m *Forum) XXX_Size() int {
	return xxx_messageInfo_Forum.Size(m)
}
func (m *Forum) XXX_DiscardUnknown() {
	xxx_messageInfo_Forum.DiscardUnknown(m)
}

var xxx_messageInfo_Forum proto.InternalMessageInfo

func (m *Forum) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Forum) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *Forum) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Forum) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateForumReq struct {
	Forum                *Forum   `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateForumReq) Reset()         { *m = CreateForumReq{} }
func (m *CreateForumReq) String() string { return proto.CompactTextString(m) }
func (*CreateForumReq) ProtoMessage()    {}
func (*CreateForumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{1}
}

func (m *CreateForumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateForumReq.Unmarshal(m, b)
}
func (m *CreateForumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateForumReq.Marshal(b, m, deterministic)
}
func (m *CreateForumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateForumReq.Merge(m, src)
}
func (m *CreateForumReq) XXX_Size() int {
	return xxx_messageInfo_CreateForumReq.Size(m)
}
func (m *CreateForumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateForumReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateForumReq proto.InternalMessageInfo

func (m *CreateForumReq) GetForum() *Forum {
	if m != nil {
		return m.Forum
	}
	return nil
}

type CreateForumRes struct {
	Forum                *Forum   `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateForumRes) Reset()         { *m = CreateForumRes{} }
func (m *CreateForumRes) String() string { return proto.CompactTextString(m) }
func (*CreateForumRes) ProtoMessage()    {}
func (*CreateForumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{2}
}

func (m *CreateForumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateForumRes.Unmarshal(m, b)
}
func (m *CreateForumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateForumRes.Marshal(b, m, deterministic)
}
func (m *CreateForumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateForumRes.Merge(m, src)
}
func (m *CreateForumRes) XXX_Size() int {
	return xxx_messageInfo_CreateForumRes.Size(m)
}
func (m *CreateForumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateForumRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateForumRes proto.InternalMessageInfo

func (m *CreateForumRes) GetForum() *Forum {
	if m != nil {
		return m.Forum
	}
	return nil
}

type ReadForumReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadForumReq) Reset()         { *m = ReadForumReq{} }
func (m *ReadForumReq) String() string { return proto.CompactTextString(m) }
func (*ReadForumReq) ProtoMessage()    {}
func (*ReadForumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{3}
}

func (m *ReadForumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadForumReq.Unmarshal(m, b)
}
func (m *ReadForumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadForumReq.Marshal(b, m, deterministic)
}
func (m *ReadForumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadForumReq.Merge(m, src)
}
func (m *ReadForumReq) XXX_Size() int {
	return xxx_messageInfo_ReadForumReq.Size(m)
}
func (m *ReadForumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadForumReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadForumReq proto.InternalMessageInfo

func (m *ReadForumReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadForumRes struct {
	Forum                *Forum   `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadForumRes) Reset()         { *m = ReadForumRes{} }
func (m *ReadForumRes) String() string { return proto.CompactTextString(m) }
func (*ReadForumRes) ProtoMessage()    {}
func (*ReadForumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{4}
}

func (m *ReadForumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadForumRes.Unmarshal(m, b)
}
func (m *ReadForumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadForumRes.Marshal(b, m, deterministic)
}
func (m *ReadForumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadForumRes.Merge(m, src)
}
func (m *ReadForumRes) XXX_Size() int {
	return xxx_messageInfo_ReadForumRes.Size(m)
}
func (m *ReadForumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadForumRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadForumRes proto.InternalMessageInfo

func (m *ReadForumRes) GetForum() *Forum {
	if m != nil {
		return m.Forum
	}
	return nil
}

type UpdateForumReq struct {
	Forum                *Forum   `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateForumReq) Reset()         { *m = UpdateForumReq{} }
func (m *UpdateForumReq) String() string { return proto.CompactTextString(m) }
func (*UpdateForumReq) ProtoMessage()    {}
func (*UpdateForumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{5}
}

func (m *UpdateForumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateForumReq.Unmarshal(m, b)
}
func (m *UpdateForumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateForumReq.Marshal(b, m, deterministic)
}
func (m *UpdateForumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateForumReq.Merge(m, src)
}
func (m *UpdateForumReq) XXX_Size() int {
	return xxx_messageInfo_UpdateForumReq.Size(m)
}
func (m *UpdateForumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateForumReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateForumReq proto.InternalMessageInfo

func (m *UpdateForumReq) GetForum() *Forum {
	if m != nil {
		return m.Forum
	}
	return nil
}

type UpdateForumRes struct {
	Forum                *Forum   `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateForumRes) Reset()         { *m = UpdateForumRes{} }
func (m *UpdateForumRes) String() string { return proto.CompactTextString(m) }
func (*UpdateForumRes) ProtoMessage()    {}
func (*UpdateForumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{6}
}

func (m *UpdateForumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateForumRes.Unmarshal(m, b)
}
func (m *UpdateForumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateForumRes.Marshal(b, m, deterministic)
}
func (m *UpdateForumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateForumRes.Merge(m, src)
}
func (m *UpdateForumRes) XXX_Size() int {
	return xxx_messageInfo_UpdateForumRes.Size(m)
}
func (m *UpdateForumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateForumRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateForumRes proto.InternalMessageInfo

func (m *UpdateForumRes) GetForum() *Forum {
	if m != nil {
		return m.Forum
	}
	return nil
}

type DeleteForumReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteForumReq) Reset()         { *m = DeleteForumReq{} }
func (m *DeleteForumReq) String() string { return proto.CompactTextString(m) }
func (*DeleteForumReq) ProtoMessage()    {}
func (*DeleteForumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{7}
}

func (m *DeleteForumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteForumReq.Unmarshal(m, b)
}
func (m *DeleteForumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteForumReq.Marshal(b, m, deterministic)
}
func (m *DeleteForumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteForumReq.Merge(m, src)
}
func (m *DeleteForumReq) XXX_Size() int {
	return xxx_messageInfo_DeleteForumReq.Size(m)
}
func (m *DeleteForumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteForumReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteForumReq proto.InternalMessageInfo

func (m *DeleteForumReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteForumRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteForumRes) Reset()         { *m = DeleteForumRes{} }
func (m *DeleteForumRes) String() string { return proto.CompactTextString(m) }
func (*DeleteForumRes) ProtoMessage()    {}
func (*DeleteForumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{8}
}

func (m *DeleteForumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteForumRes.Unmarshal(m, b)
}
func (m *DeleteForumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteForumRes.Marshal(b, m, deterministic)
}
func (m *DeleteForumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteForumRes.Merge(m, src)
}
func (m *DeleteForumRes) XXX_Size() int {
	return xxx_messageInfo_DeleteForumRes.Size(m)
}
func (m *DeleteForumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteForumRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteForumRes proto.InternalMessageInfo

func (m *DeleteForumRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListForumReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListForumReq) Reset()         { *m = ListForumReq{} }
func (m *ListForumReq) String() string { return proto.CompactTextString(m) }
func (*ListForumReq) ProtoMessage()    {}
func (*ListForumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{9}
}

func (m *ListForumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListForumReq.Unmarshal(m, b)
}
func (m *ListForumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListForumReq.Marshal(b, m, deterministic)
}
func (m *ListForumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListForumReq.Merge(m, src)
}
func (m *ListForumReq) XXX_Size() int {
	return xxx_messageInfo_ListForumReq.Size(m)
}
func (m *ListForumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListForumReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListForumReq proto.InternalMessageInfo

type ListForumRes struct {
	Forum                *Forum   `protobuf:"bytes,1,opt,name=forum,proto3" json:"forum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListForumRes) Reset()         { *m = ListForumRes{} }
func (m *ListForumRes) String() string { return proto.CompactTextString(m) }
func (*ListForumRes) ProtoMessage()    {}
func (*ListForumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9223c5c45cf6da7, []int{10}
}

func (m *ListForumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListForumRes.Unmarshal(m, b)
}
func (m *ListForumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListForumRes.Marshal(b, m, deterministic)
}
func (m *ListForumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListForumRes.Merge(m, src)
}
func (m *ListForumRes) XXX_Size() int {
	return xxx_messageInfo_ListForumRes.Size(m)
}
func (m *ListForumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListForumRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListForumRes proto.InternalMessageInfo

func (m *ListForumRes) GetForum() *Forum {
	if m != nil {
		return m.Forum
	}
	return nil
}

func init() {
	proto.RegisterType((*Forum)(nil), "forum.Forum")
	proto.RegisterType((*CreateForumReq)(nil), "forum.CreateForumReq")
	proto.RegisterType((*CreateForumRes)(nil), "forum.CreateForumRes")
	proto.RegisterType((*ReadForumReq)(nil), "forum.ReadForumReq")
	proto.RegisterType((*ReadForumRes)(nil), "forum.ReadForumRes")
	proto.RegisterType((*UpdateForumReq)(nil), "forum.UpdateForumReq")
	proto.RegisterType((*UpdateForumRes)(nil), "forum.UpdateForumRes")
	proto.RegisterType((*DeleteForumReq)(nil), "forum.DeleteForumReq")
	proto.RegisterType((*DeleteForumRes)(nil), "forum.DeleteForumRes")
	proto.RegisterType((*ListForumReq)(nil), "forum.ListForumReq")
	proto.RegisterType((*ListForumRes)(nil), "forum.ListForumRes")
}

func init() {
	proto.RegisterFile("proto/forum.proto", fileDescriptor_f9223c5c45cf6da7)
}

var fileDescriptor_f9223c5c45cf6da7 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x41, 0x4b, 0x84, 0x40,
	0x14, 0x46, 0xcb, 0x76, 0x7d, 0x2b, 0x42, 0x53, 0x81, 0x18, 0xc4, 0xe2, 0x29, 0x3a, 0x6c, 0x61,
	0x05, 0x41, 0xb7, 0x8a, 0x20, 0xe8, 0x64, 0x74, 0xe9, 0x12, 0xae, 0x33, 0xd1, 0xc0, 0xb6, 0x9a,
	0x6f, 0xec, 0xa7, 0xf5, 0xfb, 0xc2, 0xa7, 0x0e, 0xa3, 0x78, 0x90, 0x6e, 0xf3, 0xbe, 0xf7, 0x3e,
	0xbf, 0xef, 0x7d, 0x0f, 0x61, 0xbf, 0x28, 0x73, 0x95, 0x9f, 0x7f, 0xe4, 0x65, 0xf5, 0xb5, 0xa2,
	0x37, 0x73, 0xa8, 0x88, 0x38, 0x38, 0x8f, 0xf5, 0x83, 0xf9, 0x60, 0x4b, 0x1e, 0x58, 0x4b, 0xeb,
	0xd4, 0x4d, 0x6c, 0xc9, 0xd9, 0x31, 0xb8, 0x69, 0xa5, 0x3e, 0xf3, 0xf2, 0x5d, 0xf2, 0xc0, 0x26,
	0x78, 0xde, 0x00, 0x4f, 0x9c, 0x1d, 0x82, 0xa3, 0xa4, 0xda, 0x88, 0x60, 0x87, 0x1a, 0x4d, 0xc1,
	0x02, 0x98, 0x65, 0xf9, 0x56, 0x89, 0xad, 0x0a, 0x76, 0x09, 0xef, 0xca, 0xe8, 0x0a, 0xfc, 0xfb,
	0x52, 0xa4, 0x4a, 0x90, 0x56, 0x22, 0xbe, 0x59, 0x04, 0x8d, 0x01, 0x52, 0x5c, 0xc4, 0xde, 0xaa,
	0xf1, 0xd6, 0xf4, 0x5b, 0x6f, 0x43, 0x16, 0x4e, 0x62, 0x9d, 0x80, 0x97, 0x88, 0x94, 0x6b, 0xa5,
	0xc1, 0x62, 0x51, 0xdc, 0xeb, 0xe3, 0x54, 0x27, 0xaf, 0x05, 0xff, 0x87, 0xff, 0x1e, 0x6b, 0x9a,
	0xd6, 0x12, 0xfc, 0x07, 0xb1, 0x11, 0x86, 0xd6, 0x70, 0x83, 0xb3, 0xc1, 0x04, 0xd6, 0xc9, 0x63,
	0x95, 0x65, 0x02, 0x91, 0xc6, 0xe6, 0x49, 0x57, 0x46, 0x3e, 0x78, 0xcf, 0x12, 0x55, 0xf7, 0xad,
	0x7a, 0x7b, 0xa3, 0x9e, 0xe4, 0x28, 0xfe, 0xb5, 0xc1, 0x23, 0xe0, 0x45, 0x94, 0x3f, 0x32, 0x13,
	0xec, 0x16, 0x16, 0xc6, 0x61, 0xd8, 0x51, 0x4b, 0xea, 0x9f, 0x38, 0x1c, 0x85, 0x91, 0x5d, 0x83,
	0xab, 0xf3, 0x67, 0x07, 0xed, 0x8c, 0x79, 0xb1, 0x70, 0x04, 0xc4, 0x5a, 0xd3, 0x08, 0x53, 0x6b,
	0xf6, 0xcf, 0x12, 0x8e, 0xc2, 0x44, 0x36, 0x12, 0xd3, 0xe4, 0x7e, 0xce, 0xe1, 0x28, 0x8c, 0xec,
	0x06, 0x40, 0x47, 0x86, 0xda, 0xb1, 0x99, 0x6a, 0x38, 0x02, 0xe2, 0x85, 0x75, 0xe7, 0xbe, 0xcd,
	0x08, 0x2f, 0xd6, 0xeb, 0x3d, 0xfa, 0xeb, 0x2e, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xc1,
	0xb8, 0x54, 0x8a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ForumServiceClient is the client API for ForumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ForumServiceClient interface {
	CreateForum(ctx context.Context, in *CreateForumReq, opts ...grpc.CallOption) (*CreateForumRes, error)
	ReadForum(ctx context.Context, in *ReadForumReq, opts ...grpc.CallOption) (*ReadForumRes, error)
	UpdateForum(ctx context.Context, in *UpdateForumReq, opts ...grpc.CallOption) (*UpdateForumRes, error)
	DeleteForum(ctx context.Context, in *DeleteForumReq, opts ...grpc.CallOption) (*DeleteForumRes, error)
	ListForums(ctx context.Context, in *ListForumReq, opts ...grpc.CallOption) (ForumService_ListForumsClient, error)
}

type forumServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewForumServiceClient(cc grpc.ClientConnInterface) ForumServiceClient {
	return &forumServiceClient{cc}
}

func (c *forumServiceClient) CreateForum(ctx context.Context, in *CreateForumReq, opts ...grpc.CallOption) (*CreateForumRes, error) {
	out := new(CreateForumRes)
	err := c.cc.Invoke(ctx, "/forum.ForumService/CreateForum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *forumServiceClient) ReadForum(ctx context.Context, in *ReadForumReq, opts ...grpc.CallOption) (*ReadForumRes, error) {
	out := new(ReadForumRes)
	err := c.cc.Invoke(ctx, "/forum.ForumService/ReadForum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *forumServiceClient) UpdateForum(ctx context.Context, in *UpdateForumReq, opts ...grpc.CallOption) (*UpdateForumRes, error) {
	out := new(UpdateForumRes)
	err := c.cc.Invoke(ctx, "/forum.ForumService/UpdateForum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *forumServiceClient) DeleteForum(ctx context.Context, in *DeleteForumReq, opts ...grpc.CallOption) (*DeleteForumRes, error) {
	out := new(DeleteForumRes)
	err := c.cc.Invoke(ctx, "/forum.ForumService/DeleteForum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *forumServiceClient) ListForums(ctx context.Context, in *ListForumReq, opts ...grpc.CallOption) (ForumService_ListForumsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ForumService_serviceDesc.Streams[0], "/forum.ForumService/ListForums", opts...)
	if err != nil {
		return nil, err
	}
	x := &forumServiceListForumsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ForumService_ListForumsClient interface {
	Recv() (*ListForumRes, error)
	grpc.ClientStream
}

type forumServiceListForumsClient struct {
	grpc.ClientStream
}

func (x *forumServiceListForumsClient) Recv() (*ListForumRes, error) {
	m := new(ListForumRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ForumServiceServer is the server API for ForumService service.
type ForumServiceServer interface {
	CreateForum(context.Context, *CreateForumReq) (*CreateForumRes, error)
	ReadForum(context.Context, *ReadForumReq) (*ReadForumRes, error)
	UpdateForum(context.Context, *UpdateForumReq) (*UpdateForumRes, error)
	DeleteForum(context.Context, *DeleteForumReq) (*DeleteForumRes, error)
	ListForums(*ListForumReq, ForumService_ListForumsServer) error
}

// UnimplementedForumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedForumServiceServer struct {
}

func (*UnimplementedForumServiceServer) CreateForum(ctx context.Context, req *CreateForumReq) (*CreateForumRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateForum not implemented")
}
func (*UnimplementedForumServiceServer) ReadForum(ctx context.Context, req *ReadForumReq) (*ReadForumRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadForum not implemented")
}
func (*UnimplementedForumServiceServer) UpdateForum(ctx context.Context, req *UpdateForumReq) (*UpdateForumRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateForum not implemented")
}
func (*UnimplementedForumServiceServer) DeleteForum(ctx context.Context, req *DeleteForumReq) (*DeleteForumRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteForum not implemented")
}
func (*UnimplementedForumServiceServer) ListForums(req *ListForumReq, srv ForumService_ListForumsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListForums not implemented")
}

func RegisterForumServiceServer(s *grpc.Server, srv ForumServiceServer) {
	s.RegisterService(&_ForumService_serviceDesc, srv)
}

func _ForumService_CreateForum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateForumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForumServiceServer).CreateForum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/forum.ForumService/CreateForum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForumServiceServer).CreateForum(ctx, req.(*CreateForumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ForumService_ReadForum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadForumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForumServiceServer).ReadForum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/forum.ForumService/ReadForum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForumServiceServer).ReadForum(ctx, req.(*ReadForumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ForumService_UpdateForum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateForumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForumServiceServer).UpdateForum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/forum.ForumService/UpdateForum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForumServiceServer).UpdateForum(ctx, req.(*UpdateForumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ForumService_DeleteForum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteForumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForumServiceServer).DeleteForum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/forum.ForumService/DeleteForum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForumServiceServer).DeleteForum(ctx, req.(*DeleteForumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ForumService_ListForums_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListForumReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ForumServiceServer).ListForums(m, &forumServiceListForumsServer{stream})
}

type ForumService_ListForumsServer interface {
	Send(*ListForumRes) error
	grpc.ServerStream
}

type forumServiceListForumsServer struct {
	grpc.ServerStream
}

func (x *forumServiceListForumsServer) Send(m *ListForumRes) error {
	return x.ServerStream.SendMsg(m)
}

var _ForumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "forum.ForumService",
	HandlerType: (*ForumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateForum",
			Handler:    _ForumService_CreateForum_Handler,
		},
		{
			MethodName: "ReadForum",
			Handler:    _ForumService_ReadForum_Handler,
		},
		{
			MethodName: "UpdateForum",
			Handler:    _ForumService_UpdateForum_Handler,
		},
		{
			MethodName: "DeleteForum",
			Handler:    _ForumService_DeleteForum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListForums",
			Handler:       _ForumService_ListForums_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/forum.proto",
}
